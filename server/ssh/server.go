package ssh

import (
	"go-implant/client/config"
	"go-implant/common/communication"
	"go-implant/server/model"
	"crypto/rand"
	"crypto/rsa"
	"errors"
	"flag"
	"fmt"
	"io"
	"log"
	"net"
	"strconv"
	"strings"
	"sync"
	"time"

	"golang.org/x/crypto/ssh"
)

var (
	// 3h timeout
	maintimeout      = flag.Duration("main-timeout", time.Duration(180)*time.Minute, "Client socket timeout")
	forwardedtimeout = flag.Duration("forwarded-timeout", time.Duration(180)*time.Minute, "forwarded-tcpip timeout")
)

type tcpIPForwardPayload struct {
	Addr string
	Port uint32
}

type forwardedTCPPayload struct {
	Addr       string // Is connected to
	Port       uint32
	OriginAddr string
	OriginPort uint32
}

type tcpIPForwardCancelPayload struct {
	Addr string
	Port uint32
}

// Structure containing what address/port we should bind on,